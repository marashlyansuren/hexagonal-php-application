# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    routing.uuid: '[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}'

imports:
    - { resource: 'config.yaml' }

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Kernel.php'
            - '../src/Tests/'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\User\Adapter\In\Web\Controller\:
        resource: '../src/User/Adapter/In/Web/Controller'
        tags: ['controller.service_arguments']

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

    # Configuration
    App\Configuration\ErrorController:
        tags: ['controller.service_arguments']

    App\Configuration\UserChecker:

    # Services

    Symfony\Component\Security\Core\Encoder\SodiumPasswordEncoder:


    # Repositories

    App\User\Adapter\Out\Persistence\UserRepository:
        arguments:
            - !service
                factory: ['@App\Common\ServiceEntityRepositoryFactory', 'create']
                arguments: ['App\User\Domain\User']

    App\User\Adapter\Out\Persistence\UserVerificationRepository:
        arguments:
            - !service
                factory: ['@App\Common\ServiceEntityRepositoryFactory', 'create']
                arguments: ['App\User\Domain\UserVerification']

    App\User\Adapter\Out\Persistence\UserForgotPasswordAttemptRepository:
        arguments:
            - !service
                factory: ['@App\Common\ServiceEntityRepositoryFactory', 'create']
                arguments: ['App\User\Domain\UserForgotPasswordAttempt']
